{"version":3,"sources":["logo.svg","images.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","images","link","console","log","Header","react_default","a","createElement","this","props","score","topScore","React","Component","App","state","clickedPhotos","shufflePhotos","handleClick","image","clickedAlready","_this","find","photo","setState","clickPhotos","newScore","newTopScore","concat","Object","toConsumableArray","_this2","App_Header","className","map","src","height","width","onClick","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oLCgEzBC,eAhEA,CAAC,CAERC,KAAM,kBAGV,CAEIA,KAAM,kBAIV,CAEIA,KAAM,kBAGV,CAEIA,KAAM,kBAGV,CAEIA,KAAM,kBAGV,CAEIA,KAAM,kBAGV,CAEIA,KAAM,kBAGV,CAEIA,KAAM,kBAGV,CAEIA,KAAM,kBAGV,CAEIA,KAAM,mBAGV,CAEIA,KAAM,mBAGV,CAEIA,KAAM,qBCrDdC,QAAQC,IAAIH,OAENI,mLAEF,OACEC,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,0BAGAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oBACSC,KAAKC,MAAMC,OAEpBL,EAAAC,EAAAC,cAAA,wBACaC,KAAKC,MAAME,mBAZbC,IAAMC,WAsFZC,6MA5DbC,MAAQ,CAENL,MAAM,EACNC,SAAS,EACTX,OAAOA,EACPgB,cAAc,MAIhBC,cAAc,eAKdC,YAAY,SAACC,GACXjB,QAAQC,IAAIgB,GACZ,IAAIC,EAAeC,EAAKN,MAAMC,cAAcM,KAAK,SAAAC,GAE/C,OADArB,QAAQC,IAAIoB,GACLA,EAAMtB,OAAOkB,EAAMlB,OAI5B,GADAC,QAAQC,IAAIiB,GACRA,EACFC,EAAKG,SAAS,CAACd,MAAM,EAAEe,YAAa,SADtC,CAIA,IAAIC,EAASL,EAAKN,MAAML,MAAM,EAC1BiB,EAAYD,EACbL,EAAKN,MAAMJ,SAAWU,EAAKN,MAAML,QAClCiB,EAAYN,EAAKN,MAAML,OAEzBW,EAAKG,SAAS,CAACd,MAAMgB,EAASf,SAASgB,EAAYX,cAAa,GAAAY,OAAAC,OAAAC,EAAA,EAAAD,CAAMR,EAAKN,MAAMC,eAAjB,CAA+BG,MAE/FE,EAAKJ,0FAGC,IAAAc,EAAAvB,KAIN,OAEEH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyB,EAAD,CAAQtB,MAAOF,KAAKO,MAAML,MAAOC,SAAUH,KAAKO,MAAMJ,WACtDN,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,OAAf,cAEAzB,KAAKO,MAAMf,OAAOkC,IAAI,SAAAf,GACpB,OAAOd,EAAAC,EAAAC,cAAA,OAAK4B,IAAKhB,EAAMlB,KAAMmC,OAAQ,MAAMC,MAAM,MACjDC,QAAS,kBAAIP,EAAKb,YAAYC,iBAlDtBP,IAAMC,WCnBJ0B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOxC,EAAAC,EAAAC,cAACuC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.1a4e9f4d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const images = [{\n\n        link: \"./images/1.png\"\n\n    },\n    {\n\n        link: \"./images/2.png\"\n\n    },\n    \n    {\n\n        link: \"./images/3.png\"\n\n    },\n    {\n\n        link: \"./images/4.png\"\n\n    },\n    {\n\n        link: \"./images/5.png\"\n\n    },\n    {\n\n        link: \"./images/6.png\"\n\n    },\n    {\n\n        link: \"./images/7.png\"\n\n    },\n    {\n\n        link: \"./images/8.png\"\n\n    },\n    {\n\n        link: \"./images/9.png\"\n\n    },\n    {\n\n        link: \"./images/10.png\"\n\n    },\n    {\n\n        link: \"./images/11.png\"\n\n    },\n    {\n\n        link: \"./images/12.png\"\n\n    },\n\n];\n\nexport default images;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport images from \"./images\";\n\nconsole.log(images);\n\nclass Header extends React.Component{\n  render(){\n    return(\n      <header>\n        <div>\n          Clicky-Game\n        </div>\n        <div>\n          <div>\n            Score:{this.props.score}\n          </div>\n          <div>\n            Top Score:{this.props.topScore}\n          </div>\n        </div>\n\n      </header>\n\n    );\n\n  }\n}\n\n\nclass App extends React.Component{\n\n  state = {\n\n    score:0,\n    topScore:0,\n    images:images,\n    clickedPhotos:[]\n\n  };\n\n  shufflePhotos=()=>{\n    //\n  }\n\n\n  handleClick=(image)=>{\n    console.log(image)\n    let clickedAlready=this.state.clickedPhotos.find(photo=>{\n      console.log(photo)\n      return photo.link===image.link;\n    });\n\n    console.log(clickedAlready)\n    if (clickedAlready){\n      this.setState({score:0,clickPhotos: []});\n      return;\n    }\n    let newScore=this.state.score+1;\n    let newTopScore=newScore;\n    if(this.state.topScore < this.state.score) {\n      newTopScore=this.state.score;\n    }\n    this.setState({score:newScore,topScore:newTopScore,clickedPhotos: [...this.state.clickedPhotos,image]});\n\n    this.shufflePhotos();\n\n  }  \n  render(){\n\n\n\n    return(\n\n      <div>\n        <Header score={this.state.score} topScore={this.state.topScore}/>\n        <div className=\"App\">Clicky-Game\n      {\n        this.state.images.map(image=>{\n          return <img src={image.link} height =\"200\" width=\"200\" \n          onClick={()=>this.handleClick(image)}/>\n        })\n      }\n        </div>\n      </div>\n    );\n  }\n\n\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}